name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    name: SonarCloud Scan with Test Coverage
    runs-on: windows-latest

    steps:
      # 1. Check out the repository.
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. List repository structure for verification.
      - name: List Repository Structure
        run: |
          echo "Repository root:"
          dir
          echo "Contents of the Src directory:"
          dir Src
          echo "Contents of Src\ECommerceSystem:"
          dir Src\ECommerceSystem

      # 3. Set up .NET 8.
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      # 4. Install the SonarScanner for MSBuild globally.
      - name: Install SonarScanner for MSBuild
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "%USERPROFILE%\.dotnet\tools" >> $Env:GITHUB_PATH

      # 5. Restore project dependencies.
      - name: Restore Dependencies
        run: dotnet restore Src\ECommerceSystem\ECommerceSystem.sln

      # 6. Begin SonarScanner analysis.
      #     Specifies the coverage report location using Coverlet (OpenCover format).
      - name: Run SonarScanner Begin
        run: dotnet sonarscanner begin /k:"binary-brains" /o:"learnathon-by-geeky-solutions" /d:sonar.login="${{ secrets.SONARCLOUD_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.projectBaseDir="Src\ECommerceSystem" /d:sonar.cs.opencover.reportsPaths="coverage.opencover.xml"

      # 7. Build the project.
      - name: Build Project
        run: dotnet build Src\ECommerceSystem\ECommerceSystem.sln --configuration Release

      # 8. Run tests with coverage enabled.
      #     Coverlet will output an OpenCover formatted report to 'coverage.opencover.xml'.
      - name: Run Tests with Coverage
        run: dotnet test Src\ECommerceSystem\ECommerceSystem.sln --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="coverage.opencover.xml"

      # 9. End the SonarScanner analysis.
      - name: Run SonarScanner End
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONARCLOUD_TOKEN }}"
