name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    name: SonarCloud Scan with Test Coverage
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: List Repository Structure
        shell: powershell
        run: |
          Write-Host "Repository Root:"
          dir
          Write-Host "Contents of the Src folder:"
          dir Src
          Write-Host "Contents of the ECommerceSystem folder:"
          dir "Src\\ECommerceSystem"
          Write-Host "Contents of the ECommerceSystem.API folder:"
          dir "Src\\ECommerceSystem\\ECommerceSystem.API"
          
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
          
      - name: Install SonarScanner for MSBuild
        shell: powershell
        run: |
          dotnet tool install --global dotnet-sonarscanner
          Add-Content -Path $Env:GITHUB_PATH -Value "$env:USERPROFILE\\.dotnet\\tools"

      - name: Restore Dependencies
        run: dotnet restore "Src\\ECommerceSystem\\ECommerceSystem.API\\ECommerceSystem.API.csproj"

      - name: SonarScanner Begin
        run: dotnet sonarscanner begin /k:"binary-brains" /o:"learnathon-by-geeky-solutions" /d:sonar.login="${{ secrets.SONARCLOUD_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: Build Project
        run: dotnet build "Src\\ECommerceSystem\\ECommerceSystem.API\\ECommerceSystem.API.csproj" --configuration Release

      - name: Install Coverlet
        run: |
          dotnet tool install --global coverlet.console
          dotnet tool list -g  # Verifying installation

      - name: Verify Coverlet Installation
        run: dotnet tool list -g

      - name: Run Tests with Coverage
        run: dotnet test "Src\\ECommerceSystem\\ECommerceSystem.API\\ECommerceSystem.API.csproj" --configuration Release /p:CollectCoverage=true /p:CoverletOutput="coverage.opencover.xml" /p:CoverletOutputFormat="opencover"

      - name: SonarScanner End
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONARCLOUD_TOKEN }}"
