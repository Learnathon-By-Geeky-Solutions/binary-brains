name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository so everything is available.
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. List directory structure for debugging
      - name: List Repository Structure
        run: |
          echo "Repository root:"
          ls -la .
          echo "Listing contents of the Src directory:"
          ls -la ./Src
          echo "Listing contents of Src/ECommerceSystem directory:"
          ls -la ./Src/ECommerceSystem

      # 3. Set up .NET 8 environment
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      # 4. Install SonarScanner for MSBuild globally
      - name: Install SonarScanner for MSBuild
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # 5. Restore dependencies using your solution file
      - name: Restore Dependencies
        run: dotnet restore Src/ECommerceSystem/ECommerceSystem.sln

      # 6. Start the SonarScanner analysis – this must run before building!
      - name: Run SonarScanner Begin
        run: dotnet sonarscanner begin /k:"binary-brains" /o:"learnathon-by-geeky-solutions" \
            /d:sonar.login="${{ secrets.SONARCLOUD_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.projectBaseDir="Src/ECommerceSystem"

      # 7. Build the project – the scanner will capture build details
      - name: Build Project
        run: dotnet build Src/ECommerceSystem/ECommerceSystem.sln --configuration Release

      # 8. (Optional) Run tests – also useful for generating code coverage
      - name: Run Tests
        run: dotnet test Src/ECommerceSystem/ECommerceSystem.sln --configuration Release

      # 9. Complete the SonarScanner analysis
      - name: Run SonarScanner End
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONARCLOUD_TOKEN }}"
