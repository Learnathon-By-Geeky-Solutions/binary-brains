name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore Src/ECommerceSystem/ECommerceSystem.sln

      - name: Build the project
        run: dotnet build Src/ECommerceSystem/ECommerceSystem.sln --no-restore

      - name: Run tests and collect coverage
        run: dotnet test Src/ECommerceSystem/ECommerceSystem.sln --no-build --collect:"XPlat Code Coverage"

      - name: Debug - List coverage files
        run: find . -type f -name "*.xml"

      - name: Generate Coverage Report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          export PATH="$PATH:/home/runner/.dotnet/tools"
          reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:coverage-report" -reporttypes:Html

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectKey: Learnathon-By-Geeky-Solutions_binary-brains
          organization: learnathon-by-geeky-solutions
          scanner-mode: CLI
          token: ${{ secrets.SONAR_TOKEN }}
          extraProperties: |
            sonar.cs.opencover.reportsPaths=**/coverage.cobertura.xml
            sonar.cs.vstest.reportsPaths=**/*.trx
            sonar.exclusions=**/bin/**,**/obj/**,**/*.Designer.cs,**/Migrations/**,**/*.cshtml,**/*.css,**/*.cshtml.cs

      - name: Execute Application
        run: |
          dotnet run --project Src/ECommerceSystem/ECommerceSystem.csproj
