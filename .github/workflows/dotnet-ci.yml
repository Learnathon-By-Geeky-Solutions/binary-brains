name: .NET CI with SonarCloud Analysis
on:
  pull_request:
    branches:
      - main
    types: [reopened, synchronize, opened]
  push:
    branches:
      - main
jobs:
  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetching full history for SonarCloud
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"
      
      - name: Set up JDK 17 for SonarCloud
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"
      
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
      
      - name: Restore dependencies
        run: dotnet restore Src/ECommerceSystem/ECommerceSystem.sln
      
      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"Learnathon-By-Geeky-Solutions_binary-brains" \
            /o:"learnathon-by-geeky-solutions" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.sources="Src" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/*.Designer.cs,**/Migrations/**,**/*.cshtml,**/*.css,**/*.cshtml.cs" \
            /d:sonar.tests="Src" \
            /d:sonar.test.inclusions="**/*Tests/**/*.cs,**/*.Tests.cs,**/*.Test.cs,**/ECommerceSystem.Test/**/*.cs" \
            /d:sonar.sourceEncoding="UTF-8" \
            /d:sonar.projectBaseDir="${{ github.workspace }}"
      
      - name: Build
        run: dotnet build Src/ECommerceSystem/ECommerceSystem.sln --no-restore --configuration Release
      
      - name: Create runsettings file
        run: |
          cat > coverlet.runsettings << EOF
          <?xml version="1.0" encoding="utf-8" ?>
          <RunSettings>
            <DataCollectionRunSettings>
              <DataCollectors>
                <DataCollector friendlyName="XPlat code coverage">
                  <Configuration>
                    <Format>opencover</Format>
                    <Exclude>[*]*.Migrations.*</Exclude>
                    <Include>[ECommerceWebApp]*,[ECommerceSystem.Service]*,[ECommerceSystem.DataAccess]*</Include>
                    <UseSourceLink>true</UseSourceLink>
                    <IncludeTestAssembly>false</IncludeTestAssembly>
                    <SingleHit>false</SingleHit>
                    <SkipAutoProps>true</SkipAutoProps>
                  </Configuration>
                </DataCollector>
              </DataCollectors>
            </DataCollectionRunSettings>
          </RunSettings>
          EOF
      
      - name: Run tests with coverage
        run: |
          dotnet test Src/ECommerceSystem/ECommerceSystem.sln \
            --no-build \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --settings coverlet.runsettings \
            --verbosity normal
      
      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
